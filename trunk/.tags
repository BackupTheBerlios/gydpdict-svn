COLUMNS	src/gydp_window.c	/^	COLUMNS$/;"	e	enum:__anon4	file:
COLUMN_ID	src/gydp_window.c	/^	COLUMN_ID,$/;"	e	enum:__anon4	file:
COLUMN_WORD	src/gydp_window.c	/^	COLUMN_WORD,$/;"	e	enum:__anon4	file:
GYDP_APP	src/gydp_app.h	32;"	d
GYDP_APP_CLASS	src/gydp_app.h	33;"	d
GYDP_APP_CONF	src/gydp_global.h	35;"	d
GYDP_APP_DICT	src/gydp_global.h	34;"	d
GYDP_APP_GET_CLASS	src/gydp_app.h	36;"	d
GYDP_DICT	src/gydp_dict.h	32;"	d
GYDP_DICT_CLASS	src/gydp_dict.h	33;"	d
GYDP_DICT_GET_CLASS	src/gydp_dict.h	36;"	d
GYDP_DICT_SAP	src/gydp_dict_sap.h	32;"	d
GYDP_DICT_SAP_CLASS	src/gydp_dict_sap.h	33;"	d
GYDP_DICT_SAP_GET_CLASS	src/gydp_dict_sap.h	36;"	d
GYDP_DICT_YDP	src/gydp_dict_ydp.h	32;"	d
GYDP_DICT_YDP_CLASS	src/gydp_dict_ydp.h	33;"	d
GYDP_DICT_YDP_GET_CLASS	src/gydp_dict_ydp.h	36;"	d
GYDP_ENGINE_DEFAULT	src/gydp_global.h	/^	GYDP_ENGINE_DEFAULT,$/;"	e	enum:__anon2
GYDP_ENGINE_NONE	src/gydp_global.h	/^	GYDP_ENGINE_NONE,$/;"	e	enum:__anon2
GYDP_ENGINE_SAP	src/gydp_global.h	/^	GYDP_ENGINE_SAP,$/;"	e	enum:__anon2
GYDP_ENGINE_YDP	src/gydp_global.h	/^	GYDP_ENGINE_YDP,$/;"	e	enum:__anon2
GYDP_ENUM_ENGINE	src/gydp_global.h	/^	GYDP_ENUM_ENGINE,$/;"	e	enum:__anon3
GYDP_ENUM_LANG	src/gydp_global.h	/^	GYDP_ENUM_LANG,$/;"	e	enum:__anon3
GYDP_FILE_DIR	src/gydp_global.h	31;"	d
GYDP_FILE_RC	src/gydp_global.h	30;"	d
GYDP_IS_APP	src/gydp_app.h	34;"	d
GYDP_IS_APP_CLASS	src/gydp_app.h	35;"	d
GYDP_IS_DICT	src/gydp_dict.h	34;"	d
GYDP_IS_DICT_CLASS	src/gydp_dict.h	35;"	d
GYDP_IS_DICT_SAP	src/gydp_dict_sap.h	34;"	d
GYDP_IS_DICT_SAP_CLASS	src/gydp_dict_sap.h	35;"	d
GYDP_IS_DICT_YDP	src/gydp_dict_ydp.h	34;"	d
GYDP_IS_DICT_YDP_CLASS	src/gydp_dict_ydp.h	35;"	d
GYDP_IS_WINDOW	src/gydp_window.h	34;"	d
GYDP_IS_WINDOW_CLASS	src/gydp_window.h	35;"	d
GYDP_LANG_ENG_FROM_POL	src/gydp_global.h	/^	GYDP_LANG_ENG_FROM_POL,$/;"	e	enum:__anon1
GYDP_LANG_ENG_TO_POL	src/gydp_global.h	/^	GYDP_LANG_ENG_TO_POL,$/;"	e	enum:__anon1
GYDP_LANG_NONE	src/gydp_global.h	/^	GYDP_LANG_NONE,$/;"	e	enum:__anon1
GYDP_LICENSE	src/gydp_util.h	29;"	d
GYDP_SAP_BLUE	src/gydp_convert_sap.c	/^	GYDP_SAP_BLUE = 1 << 5,$/;"	e	enum:GydpSAPStyle	file:
GYDP_SAP_BOLD	src/gydp_convert_sap.c	/^	GYDP_SAP_BOLD = 1 << 0,$/;"	e	enum:GydpSAPStyle	file:
GYDP_SAP_GREEN	src/gydp_convert_sap.c	/^	GYDP_SAP_GREEN = 1 << 4,$/;"	e	enum:GydpSAPStyle	file:
GYDP_SAP_ITALIC	src/gydp_convert_sap.c	/^	GYDP_SAP_ITALIC = 1 << 1,$/;"	e	enum:GydpSAPStyle	file:
GYDP_SAP_NONE	src/gydp_convert_sap.c	/^	GYDP_SAP_NONE = 0,$/;"	e	enum:GydpSAPStyle	file:
GYDP_SAP_RED	src/gydp_convert_sap.c	/^	GYDP_SAP_RED = 1 << 3,$/;"	e	enum:GydpSAPStyle	file:
GYDP_SAP_SUPER	src/gydp_convert_sap.c	/^	GYDP_SAP_SUPER = 1 << 2,$/;"	e	enum:GydpSAPStyle	file:
GYDP_TAG_ALIGN_CENTER	src/gydp_global.h	38;"	d
GYDP_TAG_ALIGN_LEFT	src/gydp_global.h	39;"	d
GYDP_TAG_ALIGN_RIGHT	src/gydp_global.h	40;"	d
GYDP_TAG_BOLD	src/gydp_global.h	41;"	d
GYDP_TAG_COLOR_BLUE	src/gydp_global.h	48;"	d
GYDP_TAG_COLOR_GREEN	src/gydp_global.h	47;"	d
GYDP_TAG_COLOR_RED	src/gydp_global.h	46;"	d
GYDP_TAG_ITALIC	src/gydp_global.h	42;"	d
GYDP_TAG_SCRIPT_NORMAL	src/gydp_global.h	45;"	d
GYDP_TAG_SCRIPT_SUB	src/gydp_global.h	44;"	d
GYDP_TAG_SCRIPT_SUPER	src/gydp_global.h	43;"	d
GYDP_TYPE_APP	src/gydp_app.h	31;"	d
GYDP_TYPE_DICT	src/gydp_dict.h	31;"	d
GYDP_TYPE_DICT_SAP	src/gydp_dict_sap.h	31;"	d
GYDP_TYPE_DICT_YDP	src/gydp_dict_ydp.h	31;"	d
GYDP_TYPE_ENGINE	src/gydp_global.h	52;"	d
GYDP_TYPE_LANG	src/gydp_global.h	50;"	d
GYDP_TYPE_WINDOW	src/gydp_window.h	31;"	d
GYDP_WINDOW	src/gydp_window.h	32;"	d
GYDP_WINDOW_CLASS	src/gydp_window.h	33;"	d
GYDP_WINDOW_GET_CLASS	src/gydp_window.h	36;"	d
GYDP_YDP_ALIGN_CENTER	src/gydp_convert_ydp.c	/^	GYDP_YDP_ALIGN_CENTER = 2,$/;"	e	enum:GydpYDPAlign	file:
GYDP_YDP_ALIGN_LEFT	src/gydp_convert_ydp.c	/^	GYDP_YDP_ALIGN_LEFT = 1,$/;"	e	enum:GydpYDPAlign	file:
GYDP_YDP_ALIGN_NONE	src/gydp_convert_ydp.c	/^	GYDP_YDP_ALIGN_NONE = 0,$/;"	e	enum:GydpYDPAlign	file:
GYDP_YDP_COLOR_BLUE	src/gydp_convert_ydp.c	/^	GYDP_YDP_COLOR_BLUE = 3,$/;"	e	enum:GydpYDPColor	file:
GYDP_YDP_COLOR_GREEN	src/gydp_convert_ydp.c	/^	GYDP_YDP_COLOR_GREEN = 2,$/;"	e	enum:GydpYDPColor	file:
GYDP_YDP_COLOR_NONE	src/gydp_convert_ydp.c	/^	GYDP_YDP_COLOR_NONE = 0,$/;"	e	enum:GydpYDPColor	file:
GYDP_YDP_COLOR_RED	src/gydp_convert_ydp.c	/^	GYDP_YDP_COLOR_RED = 1,$/;"	e	enum:GydpYDPColor	file:
GYDP_YDP_SCRIPT_NONE	src/gydp_convert_ydp.c	/^	GYDP_YDP_SCRIPT_NONE = 0,$/;"	e	enum:GydpYDPScript	file:
GYDP_YDP_SCRIPT_NORMAL	src/gydp_convert_ydp.c	/^	GYDP_YDP_SCRIPT_NORMAL = 1,$/;"	e	enum:GydpYDPScript	file:
GYDP_YDP_SCRIPT_SUB	src/gydp_convert_ydp.c	/^	GYDP_YDP_SCRIPT_SUB = 3,$/;"	e	enum:GydpYDPScript	file:
GYDP_YDP_SCRIPT_SUPER	src/gydp_convert_ydp.c	/^	GYDP_YDP_SCRIPT_SUPER = 2,$/;"	e	enum:GydpYDPScript	file:
GydpApp	src/gydp_app.h	/^typedef struct _GydpApp GydpApp;$/;"	t	typeref:struct:_GydpApp
GydpAppClass	src/gydp_app.h	/^typedef struct _GydpAppClass GydpAppClass;$/;"	t	typeref:struct:_GydpAppClass
GydpConf	src/gydp_conf.h	/^typedef struct _GydpConf GydpConf;$/;"	t	typeref:struct:_GydpConf
GydpDict	src/gydp_dict.h	/^typedef struct _GydpDict GydpDict;$/;"	t	typeref:struct:_GydpDict
GydpDictClass	src/gydp_dict.h	/^typedef struct _GydpDictClass GydpDictClass;$/;"	t	typeref:struct:_GydpDictClass
GydpDictSAP	src/gydp_dict_sap.c	/^struct GydpDictSAP {$/;"	s	file:
GydpDictSAP	src/gydp_dict_sap.h	/^typedef struct GydpDictSAP GydpDictSAP;$/;"	t	typeref:struct:GydpDictSAP
GydpDictSAP::__parent__	src/gydp_dict_sap.c	/^	GydpDict __parent__;$/;"	m	struct:GydpDictSAP	file:	access:public
GydpDictSAP::stream	src/gydp_dict_sap.c	/^	GInputStream *stream;$/;"	m	struct:GydpDictSAP	file:	access:public
GydpDictSAP::word	src/gydp_dict_sap.c	/^	GydpDictSAPWord *word;$/;"	m	struct:GydpDictSAP	file:	access:public
GydpDictSAP::words	src/gydp_dict_sap.c	/^	gsize words;$/;"	m	struct:GydpDictSAP	file:	access:public
GydpDictSAPClass	src/gydp_dict_sap.c	/^struct GydpDictSAPClass {$/;"	s	file:
GydpDictSAPClass	src/gydp_dict_sap.h	/^typedef struct GydpDictSAPClass GydpDictSAPClass;$/;"	t	typeref:struct:GydpDictSAPClass
GydpDictSAPClass::__parent__	src/gydp_dict_sap.c	/^	GydpDictClass __parent__;$/;"	m	struct:GydpDictSAPClass	file:	access:public
GydpDictSAPWord	src/gydp_dict_sap.c	/^typedef struct GydpDictSAPWord {$/;"	s	file:
GydpDictSAPWord	src/gydp_dict_sap.c	/^} GydpDictSAPWord;$/;"	t	typeref:struct:GydpDictSAPWord	file:
GydpDictSAPWord::length	src/gydp_dict_sap.c	/^	gsize length; \/* definition length *\/$/;"	m	struct:GydpDictSAPWord	file:	access:public
GydpDictSAPWord::offset	src/gydp_dict_sap.c	/^	gsize offset; \/* definition offset *\/$/;"	m	struct:GydpDictSAPWord	file:	access:public
GydpDictSAPWord::str	src/gydp_dict_sap.c	/^	gchar *str; \/* word data *\/$/;"	m	struct:GydpDictSAPWord	file:	access:public
GydpDictYDP	src/gydp_dict_ydp.c	/^struct GydpDictYDP {$/;"	s	file:
GydpDictYDP	src/gydp_dict_ydp.h	/^typedef struct GydpDictYDP GydpDictYDP;$/;"	t	typeref:struct:GydpDictYDP
GydpDictYDP::__parent__	src/gydp_dict_ydp.c	/^	GydpDict __parent__;$/;"	m	struct:GydpDictYDP	file:	access:public
GydpDictYDP::stream	src/gydp_dict_ydp.c	/^	GInputStream *stream;$/;"	m	struct:GydpDictYDP	file:	access:public
GydpDictYDP::word	src/gydp_dict_ydp.c	/^	GydpDictYDPWord *word;$/;"	m	struct:GydpDictYDP	file:	access:public
GydpDictYDP::words	src/gydp_dict_ydp.c	/^	gsize words;$/;"	m	struct:GydpDictYDP	file:	access:public
GydpDictYDPClass	src/gydp_dict_ydp.c	/^struct GydpDictYDPClass {$/;"	s	file:
GydpDictYDPClass	src/gydp_dict_ydp.h	/^typedef struct GydpDictYDPClass GydpDictYDPClass;$/;"	t	typeref:struct:GydpDictYDPClass
GydpDictYDPClass::__parent__	src/gydp_dict_ydp.c	/^	GydpDictClass __parent__;$/;"	m	struct:GydpDictYDPClass	file:	access:public
GydpDictYDPWord	src/gydp_dict_ydp.c	/^typedef struct GydpDictYDPWord {$/;"	s	file:
GydpDictYDPWord	src/gydp_dict_ydp.c	/^} GydpDictYDPWord;$/;"	t	typeref:struct:GydpDictYDPWord	file:
GydpDictYDPWord::offset	src/gydp_dict_ydp.c	/^	gsize offset; \/* definition offset *\/$/;"	m	struct:GydpDictYDPWord	file:	access:public
GydpDictYDPWord::str	src/gydp_dict_ydp.c	/^	gchar *str; \/* word data *\/$/;"	m	struct:GydpDictYDPWord	file:	access:public
GydpEngine	src/gydp_global.h	/^} GydpEngine;$/;"	t	typeref:enum:__anon2
GydpEnum	src/gydp_global.h	/^} GydpEnum;$/;"	t	typeref:enum:__anon3
GydpLang	src/gydp_global.h	/^} GydpLang;$/;"	t	typeref:enum:__anon1
GydpSAPContext	src/gydp_convert_sap.c	/^typedef struct GydpSAPContext {$/;"	s	file:
GydpSAPContext	src/gydp_convert_sap.c	/^} GydpSAPContext;$/;"	t	typeref:struct:GydpSAPContext	file:
GydpSAPContext::len	src/gydp_convert_sap.c	/^	gsize len; \/* length of translation text *\/$/;"	m	struct:GydpSAPContext	file:	access:public
GydpSAPContext::sap	src/gydp_convert_sap.c	/^	const gchar *sap; \/* translation text to convert *\/$/;"	m	struct:GydpSAPContext	file:	access:public
GydpSAPContext::text	src/gydp_convert_sap.c	/^	GString *text; \/* raw text without control characters (utf8) *\/$/;"	m	struct:GydpSAPContext	file:	access:public
GydpSAPContext::widget	src/gydp_convert_sap.c	/^	GtkTextBuffer *widget; \/* output buffer *\/$/;"	m	struct:GydpSAPContext	file:	access:public
GydpSAPContext::word	src/gydp_convert_sap.c	/^	const gchar *word; \/* word to translate *\/$/;"	m	struct:GydpSAPContext	file:	access:public
GydpSAPStyle	src/gydp_convert_sap.c	/^typedef enum GydpSAPStyle {$/;"	g	file:
GydpSAPStyle	src/gydp_convert_sap.c	/^} GydpSAPStyle;$/;"	t	typeref:enum:GydpSAPStyle	file:
GydpWindow	src/gydp_window.h	/^typedef struct _GydpWindow GydpWindow;$/;"	t	typeref:struct:_GydpWindow
GydpWindowClass	src/gydp_window.h	/^typedef struct _GydpWindowClass GydpWindowClass;$/;"	t	typeref:struct:_GydpWindowClass
GydpYDPAlign	src/gydp_convert_ydp.c	/^typedef enum GydpYDPAlign {$/;"	g	file:
GydpYDPAlign	src/gydp_convert_ydp.c	/^} GydpYDPAlign;$/;"	t	typeref:enum:GydpYDPAlign	file:
GydpYDPColor	src/gydp_convert_ydp.c	/^typedef enum GydpYDPColor {$/;"	g	file:
GydpYDPColor	src/gydp_convert_ydp.c	/^} GydpYDPColor;$/;"	t	typeref:enum:GydpYDPColor	file:
GydpYDPContext	src/gydp_convert_ydp.c	/^typedef struct GydpYDPContext {$/;"	s	file:
GydpYDPContext	src/gydp_convert_ydp.c	/^} GydpYDPContext;$/;"	t	typeref:struct:GydpYDPContext	file:
GydpYDPContext::buffer	src/gydp_convert_ydp.c	/^	GString *buffer; \/* static temporary buffer *\/$/;"	m	struct:GydpYDPContext	file:	access:public
GydpYDPContext::control	src/gydp_convert_ydp.c	/^	GString *control; \/* raw control code *\/$/;"	m	struct:GydpYDPContext	file:	access:public
GydpYDPContext::rtf	src/gydp_convert_ydp.c	/^	const gchar *rtf; \/* translation text to convert *\/$/;"	m	struct:GydpYDPContext	file:	access:public
GydpYDPContext::state	src/gydp_convert_ydp.c	/^	GSList *state; \/* control codes stack *\/$/;"	m	struct:GydpYDPContext	file:	access:public
GydpYDPContext::text	src/gydp_convert_ydp.c	/^	GString *text; \/* raw text without control codes *\/$/;"	m	struct:GydpYDPContext	file:	access:public
GydpYDPContext::widget	src/gydp_convert_ydp.c	/^	GtkTextBuffer *widget; \/* output buffer *\/$/;"	m	struct:GydpYDPContext	file:	access:public
GydpYDPContext::word	src/gydp_convert_ydp.c	/^	const gchar *word; \/* word to translate *\/$/;"	m	struct:GydpYDPContext	file:	access:public
GydpYDPScript	src/gydp_convert_ydp.c	/^typedef enum GydpYDPScript {$/;"	g	file:
GydpYDPScript	src/gydp_convert_ydp.c	/^} GydpYDPScript;$/;"	t	typeref:enum:GydpYDPScript	file:
GydpYDPState	src/gydp_convert_ydp.c	/^typedef struct GydpYDPState {$/;"	s	file:
GydpYDPState	src/gydp_convert_ydp.c	/^} GydpYDPState;$/;"	t	typeref:struct:GydpYDPState	file:
GydpYDPState::align	src/gydp_convert_ydp.c	/^	guint8 align; \/* text alignment *\/$/;"	m	struct:GydpYDPState	file:	access:public
GydpYDPState::bold	src/gydp_convert_ydp.c	/^	guint bold : 1; \/* bold *\/$/;"	m	struct:GydpYDPState	file:	access:public
GydpYDPState::color	src/gydp_convert_ydp.c	/^	guint8 color; \/* text color *\/$/;"	m	struct:GydpYDPState	file:	access:public
GydpYDPState::indent	src/gydp_convert_ydp.c	/^	guint indent; \/* indentation *\/$/;"	m	struct:GydpYDPState	file:	access:public
GydpYDPState::italic	src/gydp_convert_ydp.c	/^	guint italic : 1; \/* italic *\/$/;"	m	struct:GydpYDPState	file:	access:public
GydpYDPState::margin_left	src/gydp_convert_ydp.c	/^	guint margin_left; \/* left margin *\/$/;"	m	struct:GydpYDPState	file:	access:public
GydpYDPState::margin_right	src/gydp_convert_ydp.c	/^	guint margin_right; \/* right margin *\/$/;"	m	struct:GydpYDPState	file:	access:public
GydpYDPState::phonetic	src/gydp_convert_ydp.c	/^	guint phonetic : 1; \/* encoding: phonetic <-> cp1250 *\/$/;"	m	struct:GydpYDPState	file:	access:public
GydpYDPState::script	src/gydp_convert_ydp.c	/^	guint8 script; \/* type of script *\/$/;"	m	struct:GydpYDPState	file:	access:public
_GydpApp	src/gydp_app.c	/^struct _GydpApp {$/;"	s	file:
_GydpApp::__parent__	src/gydp_app.c	/^	GObject __parent__;$/;"	m	struct:_GydpApp	file:	access:public
_GydpApp::widget	src/gydp_app.c	/^	GtkWidget *widget; \/* main widget *\/$/;"	m	struct:_GydpApp	file:	access:public
_GydpAppClass	src/gydp_app.c	/^struct _GydpAppClass {$/;"	s	file:
_GydpAppClass::__parent__	src/gydp_app.c	/^	GObjectClass __parent__;$/;"	m	struct:_GydpAppClass	file:	access:public
_GydpConf	src/gydp_conf.c	/^struct _GydpConf {$/;"	s	file:
_GydpConf::cfg	src/gydp_conf.c	/^	GKeyFile *cfg;$/;"	m	struct:_GydpConf	file:	access:public
_GydpDict	src/gydp_dict.h	/^struct _GydpDict {$/;"	s
_GydpDict::__parent__	src/gydp_dict.h	/^ GObject __parent__;$/;"	m	struct:_GydpDict	access:public
_GydpDict::engine	src/gydp_dict.h	/^	GydpEngine engine;$/;"	m	struct:_GydpDict	access:public
_GydpDict::language	src/gydp_dict.h	/^	GydpLang language;$/;"	m	struct:_GydpDict	access:public
_GydpDictClass	src/gydp_dict.h	/^struct _GydpDictClass {$/;"	s
_GydpDictClass::__parent__	src/gydp_dict.h	/^	GObjectClass __parent__;$/;"	m	struct:_GydpDictClass	access:public
_GydpDictClass::find	src/gydp_dict.h	/^	guint (*find)(GydpDict *dict, const gchar *word);$/;"	m	struct:_GydpDictClass	access:public
_GydpDictClass::lang	src/gydp_dict.h	/^	gboolean (*lang)(GydpDict *dict, GydpLang lang);$/;"	m	struct:_GydpDictClass	access:public
_GydpDictClass::load	src/gydp_dict.h	/^	gboolean (*load)(GydpDict *dict, gchar **locations, GydpLang lang);$/;"	m	struct:_GydpDictClass	access:public
_GydpDictClass::size	src/gydp_dict.h	/^	guint (*size)(GydpDict *dict);$/;"	m	struct:_GydpDictClass	access:public
_GydpDictClass::text	src/gydp_dict.h	/^	gboolean (*text)(GydpDict *dict, guint n, GtkTextBuffer *buffer);$/;"	m	struct:_GydpDictClass	access:public
_GydpDictClass::word	src/gydp_dict.h	/^	const gchar *(*word)(GydpDict *dict, guint n);$/;"	m	struct:_GydpDictClass	access:public
_GydpWindow	src/gydp_window.c	/^struct _GydpWindow {$/;"	s	file:
_GydpWindow::__anon5::actions	src/gydp_window.c	/^		GtkActionGroup *actions; \/* menu actions *\/$/;"	m	struct:_GydpWindow::__anon5	file:	access:public
_GydpWindow::__anon5::manager	src/gydp_window.c	/^		GtkUIManager *manager; \/* ui manager *\/$/;"	m	struct:_GydpWindow::__anon5	file:	access:public
_GydpWindow::__anon6::dict	src/gydp_window.c	/^		GtkWidget *dict; \/* dictionary menu item (dynamic submenu) *\/$/;"	m	struct:_GydpWindow::__anon6	file:	access:public
_GydpWindow::__anon6::dicts	src/gydp_window.c	/^		GSList *dicts; \/* dictionary languages available in current dictionary menu *\/$/;"	m	struct:_GydpWindow::__anon6	file:	access:public
_GydpWindow::__anon6::main	src/gydp_window.c	/^		GtkWidget *main; \/* main menu item *\/$/;"	m	struct:_GydpWindow::__anon6	file:	access:public
_GydpWindow::__anon7::central	src/gydp_window.c	/^		GtkWidget *central; \/* central widget layout *\/$/;"	m	struct:_GydpWindow::__anon7	file:	access:public
_GydpWindow::__anon7::selection	src/gydp_window.c	/^		GtkWidget *selection; \/* selection panel layout *\/$/;"	m	struct:_GydpWindow::__anon7	file:	access:public
_GydpWindow::__anon7::window	src/gydp_window.c	/^		GtkWidget *window; \/* main window layout *\/$/;"	m	struct:_GydpWindow::__anon7	file:	access:public
_GydpWindow::__anon7::words	src/gydp_window.c	/^		GtkWidget *words; \/* word list layout *\/$/;"	m	struct:_GydpWindow::__anon7	file:	access:public
_GydpWindow::__parent__	src/gydp_window.c	/^	GtkWindow __parent__;$/;"	m	struct:_GydpWindow	file:	access:public
_GydpWindow::definition	src/gydp_window.c	/^	GtkWidget *definition; \/* translation text *\/$/;"	m	struct:_GydpWindow	file:	access:public
_GydpWindow::definition_scroll	src/gydp_window.c	/^	GtkWidget *definition_scroll; \/* definition scrolled window *\/$/;"	m	struct:_GydpWindow	file:	access:public
_GydpWindow::layout	src/gydp_window.c	/^	} layout;$/;"	m	struct:_GydpWindow	typeref:struct:_GydpWindow::__anon7	file:	access:public
_GydpWindow::menu	src/gydp_window.c	/^	} menu;$/;"	m	struct:_GydpWindow	typeref:struct:_GydpWindow::__anon6	file:	access:public
_GydpWindow::ui	src/gydp_window.c	/^	} ui;$/;"	m	struct:_GydpWindow	typeref:struct:_GydpWindow::__anon5	file:	access:public
_GydpWindow::word	src/gydp_window.c	/^	GtkWidget *word; \/* single word entry *\/$/;"	m	struct:_GydpWindow	file:	access:public
_GydpWindow::words	src/gydp_window.c	/^	GtkWidget *words; \/* word list *\/$/;"	m	struct:_GydpWindow	file:	access:public
_GydpWindow::words_height	src/gydp_window.c	/^	gint words_height; \/* current words widget height *\/$/;"	m	struct:_GydpWindow	file:	access:public
_GydpWindow::words_scroll	src/gydp_window.c	/^	GtkWidget *words_scroll; \/* word list scroll *\/$/;"	m	struct:_GydpWindow	file:	access:public
_GydpWindow::words_selected	src/gydp_window.c	/^	gint words_selected; \/* currently selected item in words widget *\/$/;"	m	struct:_GydpWindow	file:	access:public
_GydpWindowClass	src/gydp_window.c	/^struct _GydpWindowClass {$/;"	s	file:
_GydpWindowClass::__parent__	src/gydp_window.c	/^	GtkWindowClass __parent__;$/;"	m	struct:_GydpWindowClass	file:	access:public
__GYDP_APP_H__	src/gydp_app.h	21;"	d
__GYDP_CONF_H__	src/gydp_conf.h	21;"	d
__GYDP_DICT_H__	src/gydp_dict.h	21;"	d
__GYDP_DICT_SAP_H__	src/gydp_dict_sap.h	21;"	d
__GYDP_DICT_YDP_H__	src/gydp_dict_ydp.h	21;"	d
__GYDP_GLOBAL_H__	src/gydp_global.h	21;"	d
__GYDP_UTIL_H__	src/gydp_util.h	21;"	d
__GYDP_WINDOW_H__	src/gydp_window.h	21;"	d
__parent__	src/gydp_app.c	/^	GObject __parent__;$/;"	m	struct:_GydpApp	file:	access:public
__parent__	src/gydp_app.c	/^	GObjectClass __parent__;$/;"	m	struct:_GydpAppClass	file:	access:public
__parent__	src/gydp_dict.h	/^	GObjectClass __parent__;$/;"	m	struct:_GydpDictClass	access:public
__parent__	src/gydp_dict.h	/^ GObject __parent__;$/;"	m	struct:_GydpDict	access:public
__parent__	src/gydp_dict_sap.c	/^	GydpDict __parent__;$/;"	m	struct:GydpDictSAP	file:	access:public
__parent__	src/gydp_dict_sap.c	/^	GydpDictClass __parent__;$/;"	m	struct:GydpDictSAPClass	file:	access:public
__parent__	src/gydp_dict_ydp.c	/^	GydpDict __parent__;$/;"	m	struct:GydpDictYDP	file:	access:public
__parent__	src/gydp_dict_ydp.c	/^	GydpDictClass __parent__;$/;"	m	struct:GydpDictYDPClass	file:	access:public
__parent__	src/gydp_window.c	/^	GtkWindow __parent__;$/;"	m	struct:_GydpWindow	file:	access:public
__parent__	src/gydp_window.c	/^	GtkWindowClass __parent__;$/;"	m	struct:_GydpWindowClass	file:	access:public
actions	src/gydp_window.c	/^		GtkActionGroup *actions; \/* menu actions *\/$/;"	m	struct:_GydpWindow::__anon5	file:	access:public
align	src/gydp_convert_ydp.c	/^	guint8 align; \/* text alignment *\/$/;"	m	struct:GydpYDPState	file:	access:public
bold	src/gydp_convert_ydp.c	/^	guint bold : 1; \/* bold *\/$/;"	m	struct:GydpYDPState	file:	access:public
buffer	src/gydp_convert_ydp.c	/^	GString *buffer; \/* static temporary buffer *\/$/;"	m	struct:GydpYDPContext	file:	access:public
central	src/gydp_window.c	/^		GtkWidget *central; \/* central widget layout *\/$/;"	m	struct:_GydpWindow::__anon7	file:	access:public
cfg	src/gydp_conf.c	/^	GKeyFile *cfg;$/;"	m	struct:_GydpConf	file:	access:public
color	src/gydp_convert_ydp.c	/^	guint8 color; \/* text color *\/$/;"	m	struct:GydpYDPState	file:	access:public
control	src/gydp_convert_ydp.c	/^	GString *control; \/* raw control code *\/$/;"	m	struct:GydpYDPContext	file:	access:public
definition	src/gydp_window.c	/^	GtkWidget *definition; \/* translation text *\/$/;"	m	struct:_GydpWindow	file:	access:public
definition_scroll	src/gydp_window.c	/^	GtkWidget *definition_scroll; \/* definition scrolled window *\/$/;"	m	struct:_GydpWindow	file:	access:public
dict	src/gydp_window.c	/^		GtkWidget *dict; \/* dictionary menu item (dynamic submenu) *\/$/;"	m	struct:_GydpWindow::__anon6	file:	access:public
dicts	src/gydp_window.c	/^		GSList *dicts; \/* dictionary languages available in current dictionary menu *\/$/;"	m	struct:_GydpWindow::__anon6	file:	access:public
engine	src/gydp_dict.h	/^	GydpEngine engine;$/;"	m	struct:_GydpDict	access:public
find	src/gydp_dict.h	/^	guint (*find)(GydpDict *dict, const gchar *word);$/;"	m	struct:_GydpDictClass	access:public
gydp_app	src/gydp_app.h	/^GObject *gydp_app();$/;"	p
gydp_app_class_init	src/gydp_app.c	/^static void gydp_app_class_init (GydpAppClass *klass);$/;"	p	file:	signature:(GydpAppClass *klass)
gydp_app_constructor	src/gydp_app.c	/^static GObject *gydp_app_constructor(GType type, guint n, GObjectConstructParam *properties);$/;"	p	file:	signature:(GType type, guint n, GObjectConstructParam *properties)
gydp_app_finalize	src/gydp_app.c	/^static void gydp_app_finalize (GObject *object);$/;"	p	file:	signature:(GObject *object)
gydp_app_get_widget	src/gydp_app.h	/^GtkWidget *gydp_app_get_widget(GObject *self);$/;"	p	signature:(GObject *self)
gydp_app_init	src/gydp_app.c	/^static void gydp_app_init (GydpApp *self);$/;"	p	file:	signature:(GydpApp *self)
gydp_app_new	src/gydp_app.h	/^GObject *gydp_app_new (int *argc, char ***argv);$/;"	p	signature:(int *argc, char ***argv)
gydp_app_parent_class	src/gydp_app.c	/^static GObjectClass *gydp_app_parent_class = NULL;$/;"	v	file:
gydp_app_run	src/gydp_app.h	/^void gydp_app_run (GObject *self);$/;"	p	signature:(GObject *self)
gydp_app_set_widget	src/gydp_app.h	/^void gydp_app_set_widget(GObject *self, GtkWidget *widget);$/;"	p	signature:(GObject *self, GtkWidget *widget)
gydp_application	src/gydp_app.c	/^static GydpApp *gydp_application = NULL;$/;"	v	file:
gydp_conf_free	src/gydp_conf.h	/^void gydp_conf_free (GydpConf *self);$/;"	p	signature:(GydpConf *self)
gydp_conf_get_integer	src/gydp_conf.h	/^gint gydp_conf_get_integer(GydpConf *self, const char *group, const char *key);$/;"	p	signature:(GydpConf *self, const char *group, const char *key)
gydp_conf_get_string	src/gydp_conf.h	/^gchar *gydp_conf_get_string (GydpConf *self, const char *group, const char *key);$/;"	p	signature:(GydpConf *self, const char *group, const char *key)
gydp_conf_load	src/gydp_conf.h	/^gboolean gydp_conf_load (GydpConf *self);$/;"	p	signature:(GydpConf *self)
gydp_conf_new	src/gydp_conf.h	/^GydpConf *gydp_conf_new ();$/;"	p
gydp_conf_save	src/gydp_conf.h	/^gboolean gydp_conf_save (GydpConf *self);$/;"	p	signature:(GydpConf *self)
gydp_conf_set_integer	src/gydp_conf.h	/^void gydp_conf_set_integer(GydpConf *self, const char *group, const char *key, int value);$/;"	p	signature:(GydpConf *self, const char *group, const char *key, int value)
gydp_conf_set_string	src/gydp_conf.h	/^void gydp_conf_set_string (GydpConf *self, const char *group, const char *key, const char *value);$/;"	p	signature:(GydpConf *self, const char *group, const char *key, const char *value)
gydp_config_file	src/gydp_util.h	/^gchar *gydp_config_file ();$/;"	p
gydp_convert_sap	src/gydp_convert_sap.c	/^gchar *gydp_convert_sap (const gchar *text);$/;"	p	file:	signature:(const gchar *text)
gydp_convert_sap	src/gydp_dict_sap.c	/^gchar *gydp_convert_sap (const gchar *text);$/;"	p	file:	signature:(const gchar *text)
gydp_convert_sap_widget	src/gydp_convert_sap.c	/^gboolean gydp_convert_sap_widget(const gchar *word, const gchar *text, gsize len, GtkTextBuffer *widget);$/;"	p	file:	signature:(const gchar *word, const gchar *text, gsize len, GtkTextBuffer *widget)
gydp_convert_sap_widget	src/gydp_dict_sap.c	/^gboolean gydp_convert_sap_widget(const gchar *word, const gchar *text, gsize len, GtkTextBuffer *widget);$/;"	p	file:	signature:(const gchar *word, const gchar *text, gsize len, GtkTextBuffer *widget)
gydp_convert_ydp	src/gydp_convert_ydp.c	/^gchar *gydp_convert_ydp (const gchar *text);$/;"	p	file:	signature:(const gchar *text)
gydp_convert_ydp	src/gydp_dict_ydp.c	/^gchar *gydp_convert_ydp (const gchar *text);$/;"	p	file:	signature:(const gchar *text)
gydp_convert_ydp_buffer	src/gydp_convert_ydp.c	/^void gydp_convert_ydp_buffer(const gchar *text, gboolean phonetic, gchar *buffer);$/;"	p	file:	signature:(const gchar *text, gboolean phonetic, gchar *buffer)
gydp_convert_ydp_buffer	src/gydp_dict_ydp.c	/^void gydp_convert_ydp_buffer(const gchar *text, gboolean phonetic, gchar *buffer);$/;"	p	file:	signature:(const gchar *text, gboolean phonetic, gchar *buffer)
gydp_convert_ydp_widget	src/gydp_convert_ydp.c	/^gboolean gydp_convert_ydp_widget(const gchar *word, const gchar *text, GtkTextBuffer *widget);$/;"	p	file:	signature:(const gchar *word, const gchar *text, GtkTextBuffer *widget)
gydp_convert_ydp_widget	src/gydp_dict_ydp.c	/^gboolean gydp_convert_ydp_widget(const gchar *word, const gchar *text, GtkTextBuffer *widget);$/;"	p	file:	signature:(const gchar *word, const gchar *text, GtkTextBuffer *widget)
gydp_data_dirs	src/gydp_util.h	/^gchar **gydp_data_dirs (GydpEngine engine);$/;"	p	signature:(GydpEngine engine)
gydp_dict_class_init	src/gydp_dict.c	/^static void gydp_dict_class_init(GydpDictClass *klass);$/;"	p	file:	signature:(GydpDictClass *klass)
gydp_dict_find	src/gydp_dict.h	/^guint gydp_dict_find (GydpDict *dict, const gchar *word);$/;"	p	signature:(GydpDict *dict, const gchar *word)
gydp_dict_get_type	src/gydp_dict.h	/^GType gydp_dict_get_type();$/;"	p
gydp_dict_lang	src/gydp_dict.h	/^gboolean gydp_dict_lang (GydpDict *dict, GydpLang lang);$/;"	p	signature:(GydpDict *dict, GydpLang lang)
gydp_dict_load	src/gydp_dict.h	/^gboolean gydp_dict_load (GydpDict *dict, gchar **locations, GydpLang lang);$/;"	p	signature:(GydpDict *dict, gchar **locations, GydpLang lang)
gydp_dict_sap_class_init	src/gydp_dict_sap.c	/^static void gydp_dict_sap_class_init (GydpDictSAPClass *klass);$/;"	p	file:	signature:(GydpDictSAPClass *klass)
gydp_dict_sap_constructor	src/gydp_dict_sap.c	/^static GObject *gydp_dict_sap_constructor(GType type, guint n, GObjectConstructParam *properties);$/;"	p	file:	signature:(GType type, guint n, GObjectConstructParam *properties)
gydp_dict_sap_finalize	src/gydp_dict_sap.c	/^static void gydp_dict_sap_finalize (GObject *object);$/;"	p	file:	signature:(GObject *object)
gydp_dict_sap_find	src/gydp_dict_sap.c	/^static guint gydp_dict_sap_find(GydpDict *dict, const gchar *word);$/;"	p	file:	signature:(GydpDict *dict, const gchar *word)
gydp_dict_sap_init	src/gydp_dict_sap.c	/^static void gydp_dict_sap_init (GydpDictSAP *self);$/;"	p	file:	signature:(GydpDictSAP *self)
gydp_dict_sap_lang	src/gydp_dict_sap.c	/^static gboolean gydp_dict_sap_lang(GydpDict *dict, GydpLang lang);$/;"	p	file:	signature:(GydpDict *dict, GydpLang lang)
gydp_dict_sap_load	src/gydp_dict_sap.c	/^static gboolean gydp_dict_sap_load(GydpDict *dict, gchar **locations, GydpLang lang);$/;"	p	file:	signature:(GydpDict *dict, gchar **locations, GydpLang lang)
gydp_dict_sap_new	src/gydp_dict_sap.h	/^GObject *gydp_dict_sap_new ();$/;"	p
gydp_dict_sap_parent_class	src/gydp_dict_sap.c	/^static GObjectClass *gydp_dict_sap_parent_class = NULL;$/;"	v	file:
gydp_dict_sap_size	src/gydp_dict_sap.c	/^static guint gydp_dict_sap_size(GydpDict *dict);$/;"	p	file:	signature:(GydpDict *dict)
gydp_dict_sap_text	src/gydp_dict_sap.c	/^static gboolean gydp_dict_sap_text(GydpDict *dict, guint n, GtkTextBuffer *buffer);$/;"	p	file:	signature:(GydpDict *dict, guint n, GtkTextBuffer *buffer)
gydp_dict_sap_unload	src/gydp_dict_sap.c	/^static void gydp_dict_sap_unload(GydpDictSAP *dict);$/;"	p	file:	signature:(GydpDictSAP *dict)
gydp_dict_sap_word	src/gydp_dict_sap.c	/^static const gchar *gydp_dict_sap_word(GydpDict *dict, guint n);$/;"	p	file:	signature:(GydpDict *dict, guint n)
gydp_dict_size	src/gydp_dict.h	/^guint gydp_dict_size (GydpDict *dict);$/;"	p	signature:(GydpDict *dict)
gydp_dict_text	src/gydp_dict.h	/^gboolean gydp_dict_text (GydpDict *dict, guint n, GtkTextBuffer *buffer);$/;"	p	signature:(GydpDict *dict, guint n, GtkTextBuffer *buffer)
gydp_dict_word	src/gydp_dict.h	/^const gchar *gydp_dict_word (GydpDict *dict, guint n);$/;"	p	signature:(GydpDict *dict, guint n)
gydp_dict_ydp_class_init	src/gydp_dict_ydp.c	/^static void gydp_dict_ydp_class_init (GydpDictYDPClass *klass);$/;"	p	file:	signature:(GydpDictYDPClass *klass)
gydp_dict_ydp_constructor	src/gydp_dict_ydp.c	/^static GObject *gydp_dict_ydp_constructor(GType type, guint n, GObjectConstructParam *properties);$/;"	p	file:	signature:(GType type, guint n, GObjectConstructParam *properties)
gydp_dict_ydp_finalize	src/gydp_dict_ydp.c	/^static void gydp_dict_ydp_finalize (GObject *object);$/;"	p	file:	signature:(GObject *object)
gydp_dict_ydp_find	src/gydp_dict_ydp.c	/^static guint gydp_dict_ydp_find(GydpDict *dict, const gchar *word);$/;"	p	file:	signature:(GydpDict *dict, const gchar *word)
gydp_dict_ydp_init	src/gydp_dict_ydp.c	/^static void gydp_dict_ydp_init (GydpDictYDP *self);$/;"	p	file:	signature:(GydpDictYDP *self)
gydp_dict_ydp_lang	src/gydp_dict_ydp.c	/^static gboolean gydp_dict_ydp_lang(GydpDict *dict, GydpLang lang);$/;"	p	file:	signature:(GydpDict *dict, GydpLang lang)
gydp_dict_ydp_load	src/gydp_dict_ydp.c	/^static gboolean gydp_dict_ydp_load(GydpDict *dict, gchar **locations, GydpLang lang);$/;"	p	file:	signature:(GydpDict *dict, gchar **locations, GydpLang lang)
gydp_dict_ydp_new	src/gydp_dict_ydp.h	/^GObject *gydp_dict_ydp_new ();$/;"	p
gydp_dict_ydp_parent_class	src/gydp_dict_ydp.c	/^static GObjectClass *gydp_dict_ydp_parent_class = NULL;$/;"	v	file:
gydp_dict_ydp_size	src/gydp_dict_ydp.c	/^static guint gydp_dict_ydp_size(GydpDict *dict);$/;"	p	file:	signature:(GydpDict *dict)
gydp_dict_ydp_text	src/gydp_dict_ydp.c	/^static gboolean gydp_dict_ydp_text(GydpDict *dict, guint n, GtkTextBuffer *buffer);$/;"	p	file:	signature:(GydpDict *dict, guint n, GtkTextBuffer *buffer)
gydp_dict_ydp_unload	src/gydp_dict_ydp.c	/^static void gydp_dict_ydp_unload(GydpDictYDP *dict);$/;"	p	file:	signature:(GydpDictYDP *dict)
gydp_dict_ydp_word	src/gydp_dict_ydp.c	/^static const gchar *gydp_dict_ydp_word(GydpDict *dict, guint n);$/;"	p	file:	signature:(GydpDict *dict, guint n)
gydp_engine	src/gydp_global.c	/^static GEnumClass *gydp_engine = NULL;$/;"	v	file:
gydp_engine_name_to_value	src/gydp_global.h	/^GydpEngine gydp_engine_name_to_value(const gchar *name);$/;"	p	signature:(const gchar *name)
gydp_engine_new	src/gydp_util.h	/^GObject *gydp_engine_new (GydpEngine engine);$/;"	p	signature:(GydpEngine engine)
gydp_engine_nick_to_value	src/gydp_global.h	/^GydpEngine gydp_engine_nick_to_value(const gchar *name);$/;"	p	signature:(const gchar *name)
gydp_engine_value_to_name	src/gydp_global.h	/^const gchar *gydp_engine_value_to_name(GydpEngine engine);$/;"	p	signature:(GydpEngine engine)
gydp_engine_value_to_nick	src/gydp_global.h	/^const gchar *gydp_engine_value_to_nick(GydpEngine engine);$/;"	p	signature:(GydpEngine engine)
gydp_enum	src/gydp_global.h	/^GEnumClass *gydp_enum (GydpEnum type);$/;"	p	signature:(GydpEnum type)
gydp_enums_ref	src/gydp_global.c	/^void gydp_enums_ref() __attribute__ ((constructor));$/;"	p	file:
gydp_enums_unref	src/gydp_global.c	/^void gydp_enums_unref() __attribute__ ((destructor));$/;"	p	file:
gydp_file_open	src/gydp_util.h	/^GInputStream *gydp_file_open (const gchar *dirname, const gchar *filename);$/;"	p	signature:(const gchar *dirname, const gchar *filename)
gydp_lang_name_to_value	src/gydp_global.h	/^GydpLang gydp_lang_name_to_value (const gchar *name);$/;"	p	signature:(const gchar *name)
gydp_lang_nick_to_value	src/gydp_global.h	/^GydpLang gydp_lang_nick_to_value (const gchar *name);$/;"	p	signature:(const gchar *name)
gydp_lang_value_to_name	src/gydp_global.h	/^const gchar *gydp_lang_value_to_name (GydpLang lang);$/;"	p	signature:(GydpLang lang)
gydp_lang_value_to_nick	src/gydp_global.h	/^const gchar *gydp_lang_value_to_nick (GydpLang lang);$/;"	p	signature:(GydpLang lang)
gydp_language	src/gydp_global.c	/^static GEnumClass *gydp_language = NULL;$/;"	v	file:
gydp_license	src/gydp_util.c	/^static gchar gydp_license[] =$/;"	v	file:
gydp_license_text	src/gydp_util.h	/^const gchar *gydp_license_text();$/;"	p
gydp_sap_append_text	src/gydp_convert_sap.c	/^static void gydp_sap_append_text (GydpSAPContext *context, const gchar *text); \/* append utf8 text *\/$/;"	p	file:	signature:(GydpSAPContext *context, const gchar *text)
gydp_sap_append_text_c	src/gydp_convert_sap.c	/^static void gydp_sap_append_text_c(GydpSAPContext *context, gchar character); \/* append native character *\/$/;"	p	file:	signature:(GydpSAPContext *context, gchar character)
gydp_sap_commit_text	src/gydp_convert_sap.c	/^static void gydp_sap_commit_text (GydpSAPContext *context, GydpSAPStyle style);$/;"	p	file:	signature:(GydpSAPContext *context, GydpSAPStyle style)
gydp_sap_context_free	src/gydp_convert_sap.c	/^static void gydp_sap_context_free(GydpSAPContext *self);$/;"	p	file:	signature:(GydpSAPContext *self)
gydp_sap_context_new	src/gydp_convert_sap.c	/^static GydpSAPContext *gydp_sap_context_new (const gchar *word, const gchar *text, gsize len, GtkTextBuffer *widget);$/;"	p	file:	signature:(const gchar *word, const gchar *text, gsize len, GtkTextBuffer *widget)
gydp_sap_encoding_iso88592	src/gydp_convert_sap.c	/^static const gchar *gydp_sap_encoding_iso88592[128] = {$/;"	v	file:
gydp_sap_parse	src/gydp_convert_sap.c	/^static void gydp_sap_parse (GydpSAPContext *context);$/;"	p	file:	signature:(GydpSAPContext *context)
gydp_sap_parse_type	src/gydp_convert_sap.c	/^static void gydp_sap_parse_type (GydpSAPContext *context, gsize pos);$/;"	p	file:	signature:(GydpSAPContext *context, gsize pos)
gydp_window_action_about	src/gydp_window.c	/^static void gydp_window_action_about (GtkAction *action, GydpWindow *window);$/;"	p	file:	signature:(GtkAction *action, GydpWindow *window)
gydp_window_action_preferences	src/gydp_window.c	/^static void gydp_window_action_preferences (GtkAction *action, GydpWindow *window);$/;"	p	file:	signature:(GtkAction *action, GydpWindow *window)
gydp_window_action_quit	src/gydp_window.c	/^static void gydp_window_action_quit (GtkAction *action, GydpWindow *window);$/;"	p	file:	signature:(GtkAction *action, GydpWindow *window)
gydp_window_action_toggle_engine	src/gydp_window.c	/^static void gydp_window_action_toggle_engine (GtkAction *action, GydpWindow *window);$/;"	p	file:	signature:(GtkAction *action, GydpWindow *window)
gydp_window_action_toggle_language	src/gydp_window.c	/^static void gydp_window_action_toggle_language (GtkAction *action, GydpWindow *window);$/;"	p	file:	signature:(GtkAction *action, GydpWindow *window)
gydp_window_actions	src/gydp_window.c	/^static const GtkActionEntry gydp_window_actions[] = {$/;"	v	file:
gydp_window_class_init	src/gydp_window.c	/^static void gydp_window_class_init (GydpWindowClass *klass);$/;"	p	file:	signature:(GydpWindowClass *klass)
gydp_window_constructor	src/gydp_window.c	/^static GObject *gydp_window_constructor (GType type, guint n, GObjectConstructParam *properties);$/;"	p	file:	signature:(GType type, guint n, GObjectConstructParam *properties)
gydp_window_dict_toggled	src/gydp_window.c	/^static void gydp_window_dict_toggled (GtkCheckMenuItem *item, gpointer data);$/;"	p	file:	signature:(GtkCheckMenuItem *item, gpointer data)
gydp_window_dict_update	src/gydp_window.c	/^static void gydp_window_dict_update (GydpWindow *self, GydpLang lang);$/;"	p	file:	signature:(GydpWindow *self, GydpLang lang)
gydp_window_finalize	src/gydp_window.c	/^static void gydp_window_finalize (GObject *object);$/;"	p	file:	signature:(GObject *object)
gydp_window_hide	src/gydp_window.c	/^static void gydp_window_hide (GtkWidget *widget, gpointer data);$/;"	p	file:	signature:(GtkWidget *widget, gpointer data)
gydp_window_init	src/gydp_window.c	/^static void gydp_window_init (GydpWindow *self);$/;"	p	file:	signature:(GydpWindow *self)
gydp_window_new	src/gydp_window.h	/^GtkWidget *gydp_window_new ();$/;"	p
gydp_window_parent_klass	src/gydp_window.c	/^static GObjectClass *gydp_window_parent_klass = NULL;$/;"	v	file:
gydp_window_ui	src/gydp_window.c	/^static const char gydp_window_ui[] =$/;"	v	file:
gydp_window_word_changed	src/gydp_window.c	/^static void gydp_window_word_changed (GtkEntry *entry, gpointer data);$/;"	p	file:	signature:(GtkEntry *entry, gpointer data)
gydp_window_word_event_key_press	src/gydp_window.c	/^static gboolean gydp_window_word_event_key_press (GtkWidget *widget, GdkEventKey *event, gpointer data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventKey *event, gpointer data)
gydp_window_word_sync	src/gydp_window.c	/^static void gydp_window_word_sync (GydpWindow *self);$/;"	p	file:	signature:(GydpWindow *self)
gydp_window_words_event_button_press	src/gydp_window.c	/^static gboolean gydp_window_words_event_button_press (GtkWidget *widget, GdkEventButton *event, gpointer data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event, gpointer data)
gydp_window_words_event_scroll	src/gydp_window.c	/^static gboolean gydp_window_words_event_scroll (GtkWidget *widget, GdkEventScroll *event, gpointer data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventScroll *event, gpointer data)
gydp_window_words_scroll_value_changed	src/gydp_window.c	/^static void gydp_window_words_scroll_value_changed(GtkRange *range, gpointer data);$/;"	p	file:	signature:(GtkRange *range, gpointer data)
gydp_window_words_select	src/gydp_window.c	/^static void gydp_window_words_select (GydpWindow *self, gint value, gint offset);$/;"	p	file:	signature:(GydpWindow *self, gint value, gint offset)
gydp_window_words_selection_changed	src/gydp_window.c	/^static void gydp_window_words_selection_changed (GtkTreeSelection *selection, gpointer data);$/;"	p	file:	signature:(GtkTreeSelection *selection, gpointer data)
gydp_window_words_size_allocate	src/gydp_window.c	/^static void gydp_window_words_size_allocate (GtkWidget *widget, GtkAllocation *allocation, gpointer data);$/;"	p	file:	signature:(GtkWidget *widget, GtkAllocation *allocation, gpointer data)
gydp_window_words_update	src/gydp_window.c	/^static void gydp_window_words_update (GydpWindow *self);$/;"	p	file:	signature:(GydpWindow *self)
gydp_window_words_update_select	src/gydp_window.c	/^static void gydp_window_words_update_select (GydpWindow *self);$/;"	p	file:	signature:(GydpWindow *self)
gydp_ydp_commit_text	src/gydp_convert_ydp.c	/^static void gydp_ydp_commit_text (GydpYDPContext *context);$/;"	p	file:	signature:(GydpYDPContext *context)
gydp_ydp_context_free	src/gydp_convert_ydp.c	/^void gydp_ydp_context_free (GydpYDPContext *self);$/;"	p	file:	signature:(GydpYDPContext *self)
gydp_ydp_context_new	src/gydp_convert_ydp.c	/^GydpYDPContext *gydp_ydp_context_new (const gchar *word, const gchar *text, GtkTextBuffer *widget);$/;"	p	file:	signature:(const gchar *word, const gchar *text, GtkTextBuffer *widget)
gydp_ydp_encoding_cp1250	src/gydp_convert_ydp.c	/^static const gchar *gydp_ydp_encoding_cp1250[128] = {$/;"	v	file:
gydp_ydp_encoding_phonetic	src/gydp_convert_ydp.c	/^static const gchar *gydp_ydp_encoding_phonetic[32] = {$/;"	v	file:
gydp_ydp_parse	src/gydp_convert_ydp.c	/^static void gydp_ydp_parse (GydpYDPContext *context);$/;"	p	file:	signature:(GydpYDPContext *context)
gydp_ydp_parse_control	src/gydp_convert_ydp.c	/^static void gydp_ydp_parse_control(GydpYDPContext *context);$/;"	p	file:	signature:(GydpYDPContext *context)
gydp_ydp_pop_state	src/gydp_convert_ydp.c	/^static void gydp_ydp_pop_state (GydpYDPContext *context);$/;"	p	file:	signature:(GydpYDPContext *context)
gydp_ydp_push_state	src/gydp_convert_ydp.c	/^static void gydp_ydp_push_state (GydpYDPContext *context);$/;"	p	file:	signature:(GydpYDPContext *context)
gydp_ydp_state_clone	src/gydp_convert_ydp.c	/^GydpYDPState *gydp_ydp_state_clone (GydpYDPState *self);$/;"	p	file:	signature:(GydpYDPState *self)
gydp_ydp_state_free	src/gydp_convert_ydp.c	/^void gydp_ydp_state_free (GydpYDPState *self);$/;"	p	file:	signature:(GydpYDPState *self)
gydp_ydp_state_new	src/gydp_convert_ydp.c	/^GydpYDPState *gydp_ydp_state_new ();$/;"	p	file:
indent	src/gydp_convert_ydp.c	/^	guint indent; \/* indentation *\/$/;"	m	struct:GydpYDPState	file:	access:public
italic	src/gydp_convert_ydp.c	/^	guint italic : 1; \/* italic *\/$/;"	m	struct:GydpYDPState	file:	access:public
lang	src/gydp_dict.h	/^	gboolean (*lang)(GydpDict *dict, GydpLang lang);$/;"	m	struct:_GydpDictClass	access:public
language	src/gydp_dict.h	/^	GydpLang language;$/;"	m	struct:_GydpDict	access:public
layout	src/gydp_window.c	/^	} layout;$/;"	m	struct:_GydpWindow	typeref:struct:_GydpWindow::__anon7	file:	access:public
len	src/gydp_convert_sap.c	/^	gsize len; \/* length of translation text *\/$/;"	m	struct:GydpSAPContext	file:	access:public
length	src/gydp_dict_sap.c	/^	gsize length; \/* definition length *\/$/;"	m	struct:GydpDictSAPWord	file:	access:public
load	src/gydp_dict.h	/^	gboolean (*load)(GydpDict *dict, gchar **locations, GydpLang lang);$/;"	m	struct:_GydpDictClass	access:public
main	src/gydp_window.c	/^		GtkWidget *main; \/* main menu item *\/$/;"	m	struct:_GydpWindow::__anon6	file:	access:public
manager	src/gydp_window.c	/^		GtkUIManager *manager; \/* ui manager *\/$/;"	m	struct:_GydpWindow::__anon5	file:	access:public
margin_left	src/gydp_convert_ydp.c	/^	guint margin_left; \/* left margin *\/$/;"	m	struct:GydpYDPState	file:	access:public
margin_right	src/gydp_convert_ydp.c	/^	guint margin_right; \/* right margin *\/$/;"	m	struct:GydpYDPState	file:	access:public
menu	src/gydp_window.c	/^	} menu;$/;"	m	struct:_GydpWindow	typeref:struct:_GydpWindow::__anon6	file:	access:public
offset	src/gydp_dict_sap.c	/^	gsize offset; \/* definition offset *\/$/;"	m	struct:GydpDictSAPWord	file:	access:public
offset	src/gydp_dict_ydp.c	/^	gsize offset; \/* definition offset *\/$/;"	m	struct:GydpDictYDPWord	file:	access:public
phonetic	src/gydp_convert_ydp.c	/^	guint phonetic : 1; \/* encoding: phonetic <-> cp1250 *\/$/;"	m	struct:GydpYDPState	file:	access:public
rtf	src/gydp_convert_ydp.c	/^	const gchar *rtf; \/* translation text to convert *\/$/;"	m	struct:GydpYDPContext	file:	access:public
sap	src/gydp_convert_sap.c	/^	const gchar *sap; \/* translation text to convert *\/$/;"	m	struct:GydpSAPContext	file:	access:public
script	src/gydp_convert_ydp.c	/^	guint8 script; \/* type of script *\/$/;"	m	struct:GydpYDPState	file:	access:public
selection	src/gydp_window.c	/^		GtkWidget *selection; \/* selection panel layout *\/$/;"	m	struct:_GydpWindow::__anon7	file:	access:public
size	src/gydp_dict.h	/^	guint (*size)(GydpDict *dict);$/;"	m	struct:_GydpDictClass	access:public
state	src/gydp_convert_ydp.c	/^	GSList *state; \/* control codes stack *\/$/;"	m	struct:GydpYDPContext	file:	access:public
str	src/gydp_dict_sap.c	/^	gchar *str; \/* word data *\/$/;"	m	struct:GydpDictSAPWord	file:	access:public
str	src/gydp_dict_ydp.c	/^	gchar *str; \/* word data *\/$/;"	m	struct:GydpDictYDPWord	file:	access:public
stream	src/gydp_dict_sap.c	/^	GInputStream *stream;$/;"	m	struct:GydpDictSAP	file:	access:public
stream	src/gydp_dict_ydp.c	/^	GInputStream *stream;$/;"	m	struct:GydpDictYDP	file:	access:public
text	src/gydp_convert_sap.c	/^	GString *text; \/* raw text without control characters (utf8) *\/$/;"	m	struct:GydpSAPContext	file:	access:public
text	src/gydp_convert_ydp.c	/^	GString *text; \/* raw text without control codes *\/$/;"	m	struct:GydpYDPContext	file:	access:public
text	src/gydp_dict.h	/^	gboolean (*text)(GydpDict *dict, guint n, GtkTextBuffer *buffer);$/;"	m	struct:_GydpDictClass	access:public
ui	src/gydp_window.c	/^	} ui;$/;"	m	struct:_GydpWindow	typeref:struct:_GydpWindow::__anon5	file:	access:public
widget	src/gydp_app.c	/^	GtkWidget *widget; \/* main widget *\/$/;"	m	struct:_GydpApp	file:	access:public
widget	src/gydp_convert_sap.c	/^	GtkTextBuffer *widget; \/* output buffer *\/$/;"	m	struct:GydpSAPContext	file:	access:public
widget	src/gydp_convert_ydp.c	/^	GtkTextBuffer *widget; \/* output buffer *\/$/;"	m	struct:GydpYDPContext	file:	access:public
window	src/gydp_window.c	/^		GtkWidget *window; \/* main window layout *\/$/;"	m	struct:_GydpWindow::__anon7	file:	access:public
word	src/gydp_convert_sap.c	/^	const gchar *word; \/* word to translate *\/$/;"	m	struct:GydpSAPContext	file:	access:public
word	src/gydp_convert_ydp.c	/^	const gchar *word; \/* word to translate *\/$/;"	m	struct:GydpYDPContext	file:	access:public
word	src/gydp_dict.h	/^	const gchar *(*word)(GydpDict *dict, guint n);$/;"	m	struct:_GydpDictClass	access:public
word	src/gydp_dict_sap.c	/^	GydpDictSAPWord *word;$/;"	m	struct:GydpDictSAP	file:	access:public
word	src/gydp_dict_ydp.c	/^	GydpDictYDPWord *word;$/;"	m	struct:GydpDictYDP	file:	access:public
word	src/gydp_window.c	/^	GtkWidget *word; \/* single word entry *\/$/;"	m	struct:_GydpWindow	file:	access:public
words	src/gydp_dict_sap.c	/^	gsize words;$/;"	m	struct:GydpDictSAP	file:	access:public
words	src/gydp_dict_ydp.c	/^	gsize words;$/;"	m	struct:GydpDictYDP	file:	access:public
words	src/gydp_window.c	/^		GtkWidget *words; \/* word list layout *\/$/;"	m	struct:_GydpWindow::__anon7	file:	access:public
words	src/gydp_window.c	/^	GtkWidget *words; \/* word list *\/$/;"	m	struct:_GydpWindow	file:	access:public
words_height	src/gydp_window.c	/^	gint words_height; \/* current words widget height *\/$/;"	m	struct:_GydpWindow	file:	access:public
words_scroll	src/gydp_window.c	/^	GtkWidget *words_scroll; \/* word list scroll *\/$/;"	m	struct:_GydpWindow	file:	access:public
words_selected	src/gydp_window.c	/^	gint words_selected; \/* currently selected item in words widget *\/$/;"	m	struct:_GydpWindow	file:	access:public
